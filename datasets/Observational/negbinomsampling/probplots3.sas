options ls=115 nocenter ps=1000;
*options ls=125 nodate nocenter formdlim="+" mstored sasmstore=research;

%let m=100;
%let logm=%sysfunc(log(&m));
%put &logm;

data one;
   infile "nbalmonds.csv" firstobs=7 dsd;
   input j lot ppbmean ppbvar kernels kervar k;
   myk=(ppbmean**2)/(7730*ppbvar-ppbmean);
   logk=log(k);
   logppbmean=log(ppbmean);
   phat=k/(ppbmean+k);
   keep lot ppbmean ppvar  kernels k myk logk logppbmean phat;
run;
ods listing close;
proc glm data=one;
   model logk = logppbmean/clparm;
   estimate "logk at m=100" intercept 1 logppbmean 4.605;
   ods output parameterestimates=parms estimates=ests;
run;
data ests;
   set ests;
   khat=exp(estimate);
run;
proc print data=ests;run;
proc print data=parms;run;
proc transpose data=parms out=tparms ;
   var estimate;
   *id variable;
   id parameter;
run;
proc print data=tparms;run;
data tparms;
   set tparms;
   call symput("intercept",intercept);
   call symput("exponent",logppbmean);
run;
%put intercept=&intercept;
%put slope=&exponent;

data pdf100;
   label m="mean among kernels";
   label sd_among_kernels="sd among kernels";
   label k="estimated shape, k";
   do m = 5,10,20,50,100,150;
   k=exp(&intercept+&exponent*log(m));
   var_among_kernels=m+m**2/k;
   sd_among_kernels=sqrt(m+m**2/k);
   p=k/(m+k);
   p0=PDF('NEGB',0,p,k);
   p1=PDF('NEGB',1,p,k);
   p2=PDF('NEGB',2,p,k);
   p3=PDF('NEGB',3,p,k);
   p4=PDF('NEGB',4,p,k);
   p5=PDF('NEGB',5,p,k);

   lgk=log(gamma(k));
   q0=p0;
   q1=exp(log(gamma(1+k))-log(gamma(k))-log(gamma(1+1)) + k*log(p)+1*log(1-p));
   q2=exp(log(gamma(2+k))-log(gamma(k))-log(gamma(2+1)) + k*log(p)+2*log(1-p));
   q3=exp(log(gamma(3+k))-log(gamma(k))-log(gamma(3+1)) + k*log(p)+3*log(1-p));
   q4=exp(log(gamma(4+k))-log(gamma(k))-log(gamma(4+1)) + k*log(p)+4*log(1-p));
   q5=exp(log(gamma(5+k))-log(gamma(k))-log(gamma(5+1)) + k*log(p)+5*log(1-p));

   p1_5=CDF('NEGB',5,p,k) - CDF('NEGB',0,p,k); 
   p6_10=CDF('NEGB',10,p,k) - CDF('NEGB',5,p,k); 
   p100=PDF('NEGB',100,p,k); 

*   lpgt10=log(1-CDF('NEGB',10,p,m));

   p11_100=CDF('NEGB',100,p,k) - CDF('NEGB',10,p,k); 
   p101_1000=CDF('NEGB',1000,p,k) - CDF('NEGB',100,p,k); 
   p1001_10000=CDF('NEGB',10000,p,k) - CDF('NEGB',1000,p,k); 
   p10001_100000=CDF('NEGB',100000,p,k) - CDF('NEGB',10000,p,k); 
   p100001_1000000=CDF('NEGB',1000000,p,k) - CDF('NEGB',100000,p,k); 
   pgt_1000= 1-CDF('NEGB',1000,p,k); 
   pgt_10000=1-CDF('NEGB',10000,p,k); 
   pgt_100000=1-CDF('NEGB',100000,p,k); 
   pgt_1000000=1-CDF('NEGB',1000000,p,k); 
   pgt10=1-CDF('NEGB',10,p,k);

*   p1_gt0=PDF('NEGB',1,p,m)/(1-PDF('NEGB',0,p,m));
*   p2_gt0=PDF('NEGB',2,p,m)/(1-PDF('NEGB',0,p,m));
*   p1_5_gt0=(CDF('NEGB',5,p,m) - CDF('NEGB',0,p,m))/(1-PDF('NEGB',0,p,m)); 
*   p6_10_gt0=(CDF('NEGB',10,p,m) - CDF('NEGB',5,p,m))/(1-PDF('NEGB',0,p,m)); 
*   p11_100_gt0=(CDF('NEGB',100,p,m) - CDF('NEGB',10,p,m))/(1-PDF('NEGB',0,p,m)); 
*   p101_1000_gt0=(CDF('NEGB',1000,p,m) - CDF('NEGB',100,p,m))/(1-PDF('NEGB',0,p,m)); 
*   p1001_10000_gt0=(CDF('NEGB',10000,p,m) - CDF('NEGB',1001,p,m))/(1-PDF('NEGB',0,p,m)); 
*   p10001_100000_gt0=(CDF('NEGB',100000,p,m) - CDF('NEGB',10001,p,m))/(1-PDF('NEGB',0,p,m));
*   pgt_1000_gt0=(1-CDF('NEGB',1000,p,m))/(1-PDF('NEGB',0,p,m));
   output;
   end;
run;
ods listing ;
proc print data=pdf100 labels;
   *format p0-p5 q0-q5 p1_5 p6_10 p100 p11_100 p101_1000 p1001_10000 pgt_10000 8.6;
   var m k p sd_among_kernels p100 ;*p0-p5 p1_5 p6_10 p100 p11_100 p101_1000 p1001_10000 p10001_100000 p100001_1000000 pgt_1000 pgt_10000 pgt_100000 pgt_1000000;
   *var m k p lgk sd_among_kernels p0-p5 q0-q5;
run;
endsas;
data pdf100;
   set pdf100;
   label m="mean among kernels";
   label sd_among_kernels="sd among kernels";
   label k="estimated shape, k";
   array pvec{10} p0 p1 p2 p1_5 p6_10 p11_100 p101_1000 p1001_10000 p10001_100000 pgt_1000; 
   array nlpvec{10} nlp0 nlp1 nlp2 nlp1_5 nlp6_10 nlp11_100 nlp101_1000 nlp1001_10000 nlp10001_100000 nlpgt_1000; 
   array pvec_gt0{9} p1_gt0 p2_gt0 p1_5_gt0 p6_10_gt0 p11_100_gt0 p101_1000_gt0 p1001_10000_gt0 p10001_100000_gt0 pgt_1000; 
   do i=1 to 10;
      if pvec{i} > 0 then nlpvec{i}=-log10(pvec{i});
      else nlpvec{i}=.;
   end;
   do j=1 to 9;
      pvec_gt0{j} = pvec{j+1}/(1-pvec{1});
   end;
run; 
proc print data=pdf100 labels; title "pdf100";
   var m k sd_among_kernels p0-p2 p1_5 p6_10 p11_100 p101_1000 p1001_10000 p10001_100000 pgt_1000; 
run;
proc print data=pdf100 labels; title "pdf100 - log scale";
   var m k sd_among_kernels nlp0-nlp2 nlp1_5 nlp6_10 nlp11_100 nlp101_1000 nlp1001_10000 nlp10001_100000 nlpgt_1000; 
run;
proc print data=pdf100 labels; title "pdf100 - given contamination";
   var m k sd_among_kernels p0 p1_gt0 p2_gt0 p1_5_gt0 p6_10_gt0 p11_100_gt0 p101_1000_gt0 p1001_10000_gt0 p10001_100000_gt0 pgt_1000; 
run;
endsas;

ods listing ;
data ests100;
   set ests;
   k=exp(estimate);
   klow=exp(lowercl)
   khi=exp(uppercl)
   phat=k/(&m+k);
   array xvec{10} (0,1,5,10,50,100,150,200,250,300);
   do i=1 to 8;
      pvec{i}=PDF('NEGB',m,k) - PDF('NEGB',m,k);
      p0=PDF('NEGB',0,phat,k);
      p1=PDF('NEGB',1,phat,k);
      p2=PDF('NEGB',2,phat,k);
      p1_5=CDF('NEGB',5,phat,k)-p0;
      p6_10=CDF('NEGB',10,phat,k)-CDF('NEGB',5,phat,k);
      p11_100=CDF('NEGB',100,phat,k)-CDF('NEGB',10,phat,k);
      p101_1000=CDF('NEGB',1000,phat,k)-CDF('NEGB',100,phat,k);
      pgt1000=1-CDF('NEGB',1000,phat,k);
run;
proc print data=ests100; 
run;
endsas;
proc print data=parms; run;
endsas;
proc transpose data=parms out=tparms ;
   var estimate;
   id variable;
run;
proc print data=tparms;run;
data tparms;
   set tparms;
   call symput("intercept",intercept);
   call symput("exponent",logppbmean);
run;
data one;
   set one;
   newk=exp(&intercept)*ppbmean**&exponent;
   newphat=newk/(ppbmean+newk);
   p0=CDF('NEGB',0,newphat,newk);
run;
proc print data=one;run;

data assess;
   *b0=exp(intercept);
   *N=7730;
   format p0 p1 p2 p1_5 p6_10 p11_100 p101_1000 pgt_10000 9.7;
   do m = 5,10,20,50,100,200,1000;
      k=exp(&intercept)*(m**&exponent);
      phat=k/(m+k);
      p0=PDF('NEGB',0,phat,k);
      pcontam=1-p0;
      *pdfhathalf=PDF('NEGB',0.5,phat,k);
      p1=PDF('NEGB',1,phat,k);
      p2=PDF('NEGB',2,phat,k);
      p1_5=CDF('NEGB',5,phat,k)-p0;
      p6_10=CDF('NEGB',10,phat,k)-CDF('NEGB',5,phat,k);
      p11_100=CDF('NEGB',100,phat,k)-CDF('NEGB',10,phat,k);
      p101_1000=CDF('NEGB',1000,phat,k)-CDF('NEGB',100,phat,k);
      pgt1000=1-CDF('NEGB',1000,phat,k);
      output;
   end;
run;
ods listing ;
proc print data=assess noobs;
   title  "Estimating distribution of aflatoxin contamination among kernels";
   title2  "Given an observed lot concentration m (in ppb)";
   title3  "Note the mean among kernels is m";
   title4 "using the regression estimate for k = exp(&intercept)*ppbmean**(&exponent)";
   title5 "p6_10, for example, gives the probability that a kernel has ";
   var m k p0 pcontam p1_5 p6_10 p11_100 p101_1000 pgt1000;
run; 
endsas;
data pdf;
   *N=7730;
   m=100;
   do x=1 to 1000;
      k=exp(&intercept)*(m**&exponent);
      phat=k/(m+k);
      *px=PDF('NEGB',x*N,phat,N*k);
      px=PDF('NEGB',x,phat,k);
      pxgivengt0=px/(1-PDF('NEGB',0,phat,k));
      output;
   end;
run;
symbol  value=none i=j;
proc gplot data=pdf; title "lotppbmean=100";
   title2 "using the regression estimate for k = exp(&intercept)*ppbmean**(&exponent)";
   plot px*x;
   plot pxgivengt0*x;
run;
   
endsas;
proc sort data=rsample;
   by lot ecdf;
run;
proc sort data=one;
   by lot ;
run;
data both;
   merge rsample one;
   by lot;
   phat=k/(ppbmean+k);
   ppbsum=kernels*ctotal;
   cdfhat=CDF('NEGB',kernels*ctotal,phat,kernels*k);
   pdfhat=PDF('NEGB',ppbsum,phat,kernels*k);
run;
proc print data=both noobs;
   var lot phat k ppbsum ctotal kernels cdfhat pdfhat;
run;
endsas;
data tboth;
   array y{2} ecdf cdfhat;
   array yn{2} $6 ("ecdf","cdfhat");
   set both;
   do i=1 to 2;
      mycdf=y{i};
      fcn=yn{i};
      output;
   end;
run;
 /* 
proc sgpanel data=both;
   panelby lot/columns=5 rows=4;
   *panelby lot/columns=2 rows=2;
   step x=ctotal y=ecdf; 
   pbspline x=ctotal y=cdfhat/degree=1;
run;
*/
*now we'll add KS critical values one lot at a time;

data tboth;
   set tboth;
   ucl=ecdf+.3273;
   lcl=ecdf-.3273;
run;
symbol1 value=dot i=j color=black; 
symbol2 value=dot i=j color=blue;
symbol3 value=dot i=j color=blue;
symbol4 value=dot i=j color=red;
proc gplot data=tboth; 
title  "ECDF";
title2 "blue=ci, red=fitted, black=ecdf";
   by lot;
   plot ecdf*ctotal ucl*ctotal lcl*ctotal cdfhat*ctotal/overlay;
run;

endsas;
 
proc sgpanel data=tboth;
   panelby lot;
   step x=ctotal y=mycdf / group=fcn;
   series x=ctotal y=mycdf / group=fcn;
run;
proc print data=tboth;  title "tboth";
run;
endsas;
symbol1 value=dot c=black;
symbol2 value=none i=j c=red;
symbol3 value=none i=rl c=blue;
proc gplot;
   by lot;
   plot ecdf*ctotal=1 cdfhat*ctotal=2/overlay;
run;
endsas;
proc reg data=one; title "model w linear in m not great";
   model k=ppbmean ; 
   *plot (k predicted.)*ppbmean; 
   output out=two p=khat;
run;
data two;
   set two;
   varxbarhat=(1/7730)*(ppbmean+ppbmean**2/khat);
   sdxbarhat=sqrt(varxbarhat);
run;
proc print data=two;
run;

symbol1 value=dot c=black;
symbol2 value=none i=j c=red;
symbol3 value=none i=rl c=blue;
proc gplot data=two; title "observed lot sds agree w theoretical estimate";
   *plot varxbarhat*ppbvar;
   *plot sdxbarhat*ppbsd;
   plot ppbsd*ppbmean=1 sdxbarhat*ppbmean=2 ppbsd*ppbmean=3/overlay;
run;
endsas;

proc reg;
   model ppbvar=ppbmeansq ppbmean;
   plot ppbvar*ppbmean;
   model ppbvar=ppbmeansq ppbmean/noint;
   plot ppbvar*ppbmean;
*   model logvar=ppbmean;
*   plot logvar*ppbmean;
*   model logvarn=ppbmean;
*   plot logvarn*ppbmean;
run;
endsas;
endsas;
symbol value=dot i=rl;
proc gplot;
   plot ppbvar*ppbmean;
run;



data zero;
   mu=100;
   k=.000151539;
   phat=k/(mu+k);
   p0=CDF('NEGB',0,phat,k);
run;
proc print data=zero;run;
data one;
   infile "nbalmonds.csv" firstobs=7 dsd;
   input j lot ppbmean ppbvar kernels kervar k;
   N=kernels;
   myk=(ppbmean**2)/(7730*ppbvar-ppbmean);
   Nk=N*k;
   *SAS parameterization of NB is CDF('NEGBINOMIAL',m=failures,p=prob(success),n=successes=k);
      phat=k/(ppbmean+k);
      p0=CDF('NEGB',0,phat,k);
      *pcontam=1-CDF('NEGB',0,phat,N*m);
      pcontam=1-p0;
run;
proc print;run;
proc sort data=one;
   *by lot;
   by ppbmean;
run;
symbol value=dot i=j;
proc gplot data=one;
   *where lot < 4;
   *by lot;
   plot pcontam*ppbmean;
run;
